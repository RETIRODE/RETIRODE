<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="RETIRODE_APP.Views.SettingsPage"
             xmlns:toolkit="http://xamarin.com/schemas/2020/toolkit"
             xmlns:local="clr-namespace:RETIRODE_APP.ViewModels"
             xmlns:converters="clr-namespace:RETIRODE_APP.Converters"
             Title="{Binding Title}"
             BackgroundColor="{StaticResource Secondary}">

    <ContentPage.BindingContext>
        <local:SettingsViewModel />
    </ContentPage.BindingContext>

    <ContentPage.Resources>
        <converters:OkNotOkTextConverter x:Key="OkNotOkConverter"></converters:OkNotOkTextConverter>
        <converters:OverloadColorConverter x:Key="OverloadColorConverter"></converters:OverloadColorConverter>
        
        
        <ResourceDictionary>

            <!--Label styling-->
            <Style TargetType="Label">
                <Setter Property="HorizontalOptions" Value="Center"/>
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="FontAttributes" Value="Bold"/>
                <Setter Property="TextColor" Value="White"/>
            </Style>

            <!--Entry styling-->
            <Style x:Key="TCDValue" TargetType="Entry">
                <Setter Property="HorizontalOptions" Value="Center"/>
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="FontAttributes" Value="Bold"/>
                <Setter Property="TextColor" Value="White"/>
                <Setter Property="Keyboard" Value="Numeric"/>
                <Setter Property="BackgroundColor" Value="{StaticResource Primary}"/>
                <Setter Property="WidthRequest" Value="150"/>
                <Setter Property="HorizontalTextAlignment" Value="Center"/>
            </Style>

            <!--Disabled label styling-->
            <Style x:Key="TCDValueDisabled" TargetType="Label">
                <Setter Property="Padding" Value="11"/>
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="FontAttributes" Value="Bold"/>
                <Setter Property="TextColor" Value="#383838"/>
                <Setter Property="BackgroundColor" Value="{StaticResource Primary}"/>
                <Setter Property="WidthRequest" Value="150"/>
                <Setter Property="HorizontalTextAlignment" Value="Center"/>
            </Style>

            <!--Ok/NotOk label styling-->
            <Style x:Key="OkNoTOkLabel" TargetType="Label">
                <Setter Property="Padding" Value="0,5,0,0"/>
                <Setter Property="FontAttributes" Value="Bold"/>
                <Setter Property="TextColor" Value="White"/>
                <Setter Property="WidthRequest" Value="150"/>
                <Setter Property="HeightRequest" Value="30"/>
                <Setter Property="HorizontalTextAlignment" Value="Center"/>
                <Setter Property="VerticalOptions" Value="Center"/>
            </Style>

        </ResourceDictionary>
    </ContentPage.Resources>

    <ContentPage.Content>
        <ScrollView>
            <StackLayout>

                <ActivityIndicator Color="Orange" IsRunning="{Binding IsBusy}" />
                
                <!--TCD block-->
                <Grid Margin="20, 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="50"/>
                    </Grid.RowDefinitions>

                    <!-- TCD Cal 0.0 ns -->
                    <Label Text="0.0 ns:"/>
                    <Label Text="{Binding TCDCal0, Mode=TwoWay}" 
                           Grid.Row="1"
                           Style="{StaticResource TCDValueDisabled}"/>

                    <!-- TCD Cal 62.5 ns -->
                    <Label Text="62.5 ns:" Grid.Column="1"/>
                    <Label Text="{Binding TCDCal62, Mode=TwoWay}"  
                           Grid.Column="1" 
                           Grid.Row="1"
                           Style="{StaticResource TCDValueDisabled}"/>

                    <!-- TCD Cal 125.0 ns -->
                    <Label Text="125.0 ns:" Grid.Column="2"/>
                    <Label Text="{Binding TCDCal125, Mode=TwoWay}" 
                           Grid.Column="2" 
                           Grid.Row="1" 
                           Style="{StaticResource TCDValueDisabled}"/>
                </Grid>


                <!-- Trigger Pulse -->
                <Label Text="Trigger Pulse"/>
                <Entry Text="{Binding TriggerPulse, Mode=TwoWay}"
                       Style="{StaticResource TCDValue}" Grid.Row="1">
                    <Entry.Behaviors>
                        <toolkit:EventToCommandBehavior 
                                EventName="Unfocused"
                                Command="{Binding SetTriggerPulseCommand}"/>
                    </Entry.Behaviors>
                </Entry>

                <!--Power block-->
                <Grid Margin="20,30,20,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30" />
                    </Grid.RowDefinitions>

                    <!-- power labels -->
                    <Label Text="SiPM bias power"/>
                    <Label Text="Laser power" Grid.Column="1"/>

                </Grid>

                <Grid Margin="20,0,20,20">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30" />
                        <RowDefinition Height="50" />
                        <RowDefinition Height="30" />
                    </Grid.RowDefinitions>

                    <!-- SiPM bias power -->

                    <!-- Target[V] -->
                    <Label Text="Target[V]"/>
                    <Entry Style="{StaticResource TCDValue}" Grid.Row="1" Text="{Binding SIPMTargetV, Mode=TwoWay}">
                        <Entry.Behaviors>
                            <toolkit:EventToCommandBehavior 
                                EventName="Unfocused"
                                Command="{Binding SetTargetSimpBiasPowerVoltageCommand}"/>
                        </Entry.Behaviors>
                    </Entry>
                
                    <!-- Actual[V] -->
                    <Label Text="Actual[V]" Grid.Column="1"/>
                    <Label x:Name="sipmActual"
                           Style="{StaticResource TCDValueDisabled}" 
                           Grid.Column="1" 
                           Grid.Row="1"
                           Text="{Binding SIPMActualV, Mode=TwoWay}"/>

                    <!-- ON/OFF -->
                    <Switch x:Name="sipmSwitch"
                            IsToggled="{Binding IsSipmBiasPowerVoltageTurnOn}"
                            ThumbColor="{StaticResource Orange}"
                            OnColor="{StaticResource Primary}"
                            Grid.Column="0"
                            Grid.Row="2"                               
                            HorizontalOptions="Center">
                        <Switch.Behaviors>
                            <toolkit:EventToCommandBehavior 
                                EventName="Toggled"
                                Command="{Binding SipmBiasPowerToggleCommand}" />
                        </Switch.Behaviors>
                    </Switch>

                    <!-- OK/NOT OK -->
                    <Label x:Name="sipmOknok"
                           Text="{Binding BiasVoltageOverload, Converter = {StaticResource OkNotOkConverter}}"
                          BackgroundColor="{Binding BiasVoltageOverload, Converter = {StaticResource OverloadColorConverter}}"
                           Grid.Column="1" 
                           Grid.Row="2"
                           Style="{StaticResource OkNoTOkLabel}"/>



                    <!-- Laser power -->

                    <!-- Target[V] -->
                    <Label Text="Target[V]" Grid.Column="2"/>
                    <Entry Style="{StaticResource TCDValue}" 
                           Grid.Column="2" 
                           Grid.Row="1"                               
                           Text="{Binding LaserTargetV, Mode=TwoWay}">
                        <Entry.Behaviors>
                            <toolkit:EventToCommandBehavior 
                                EventName="Unfocused"
                                Command="{Binding SetTargetLaserPowerVolateCommand}"/>
                        </Entry.Behaviors>
                    </Entry>
                    <!-- Actual[V] -->
                    <Label Text="Actual[V]" Grid.Column="3"/>
                    <Label x:Name="laserActual"
                           Style="{StaticResource TCDValueDisabled}"
                           Grid.Column="3"
                           Grid.Row="1"
                           Text="{Binding LaserActualV, Mode=TwoWay}"/>

                    <!-- ON/OFF -->
                    <Switch x:Name="laserSwitch"
                            IsToggled="{Binding IsLaserVoltageTurnOn}" 
                            ThumbColor="{StaticResource Orange}"
                            OnColor="{StaticResource Primary}"
                            Grid.Column="2"
                            Grid.Row="2"
                            HorizontalOptions="Center">
                        <Switch.Behaviors>
                            <toolkit:EventToCommandBehavior 
                                EventName="Toggled"
                                Command="{Binding LaserVoltageToggleCommand}" />
                        </Switch.Behaviors>
                    </Switch>

                    <!-- OK/NOT OK -->
                    <Label x:Name="laserOknok"
                           Text="{Binding LaserVoltageOverload, Converter = {StaticResource OkNotOkConverter}}"
                           BackgroundColor="{Binding LaserVoltageOverload, Converter = {StaticResource OverloadColorConverter}}"
                           Grid.Column="3" 
                           Grid.Row="2"
                           Style="{StaticResource OkNoTOkLabel}"/>

                </Grid>

                <!--Button block-->
                <Grid Margin="20,10,20,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50" />
                    </Grid.RowDefinitions>

                    <!-- Calibrate button -->
                    <Button Text="Calibrate" Command="{Binding CalibrateCommand}"/>

                    <!-- SW Reset button -->
                    <Button Text="SW Reset" Command="{Binding SoftwareResetCommand}" Grid.Column="1"/>

                </Grid>

                <!--Start scan-->
                <Button Margin="20,30,20,20" Text="SCAN"
                            Command="{Binding StartDepictionCommand}"
                            BackgroundColor="{StaticResource Orange}"
                            TextColor="White" />

            </StackLayout>
        </ScrollView>

    </ContentPage.Content>

</ContentPage>